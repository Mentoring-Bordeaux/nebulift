name: Back CD

on:
  push:
    branches:
      - delivery/*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Docker pull from dev to prod registry
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}
    env:
      AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}
      DEV_NAMESPACE: dev
      AZURE_REGISTRY_NAME: nebulift

    steps:
      - uses: actions/checkout@v4

      # Connection to Azure (OIDC)
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Log in to ACR
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.AZURE_REGISTRY_NAME }}

      # Get the latest image tag from the dev namespace
      - name: Get Latest Image Tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(az acr repository show-tags \
            --name ${{ env.AZURE_REGISTRY_NAME }} \
            --repository ${{ env.DEV_NAMESPACE }}/nebulift-backend \
            --orderby time_desc \
            --output tsv \
            --top 1)
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      # Pull the latest image from the dev namespace
      - name: Pull Latest Image from Dev
        run: |
          docker pull ${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DEV_NAMESPACE }}/nebulift-backend:${{ env.LATEST_TAG }}

      # Tag the image for the prod namespace
      - name: Tag Image for Prod
        run: |
          docker tag ${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.DEV_NAMESPACE }}/nebulift-backend:${{ env.LATEST_TAG }} \
          ${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/nebulift-backend:latest

      # Push the image to the prod namespace (deploys automatically)
      - name: Push Image to Prod
        run: |
          docker push ${{ vars.AZURE_REGISTRY_LOGIN_SERVER }}/nebulift-backend:latest
