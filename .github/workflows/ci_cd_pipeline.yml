name: Build and Deploy Nebulift

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: 
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}
    
    steps:
      - uses: actions/checkout@v4

      # Configuration PNPM et Node.js
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.x'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      # Configuration .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Build Backend
      - name: Build Backend
        run: |
          cd backend
          dotnet publish src/Nebulift.Api/Nebulift.Api.csproj -c Release -o ../api

      # Déploiement via Static Web Apps
      - name: Build and Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          # Le frontend déjà construit est dans frontend/.output/public
          app_location: "frontend/.output/public"
          # Le backend compilé est dans api/
          api_location: "api"
          output_location: ".output/public"
          app_build_command: |
            # Nettoyage des dossiers
            rm -rf node_modules .nuxt .output

            # Installation et build avec PNPM
            pnpm install --frozen-lockfile
            pnpm run build
          skip_app_build: false
          skip_api_build: true
