name: Build and Deploy Nebulift

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: 
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    # Définit l'environnement en fonction du contexte d'exécution
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}
    
    steps:
      - uses: actions/checkout@v4

      # Configuration .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Build Backend
      - name: Build Backend
        run: |
          cd backend
          dotnet publish src/Nebulift.Api/Nebulift.Api.csproj -c Release -o ../api

      # Déploiement via Static Web Apps
      - name: Build and Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend"
          api_location: "api"
          output_location: ".output/public"
          app_build_command: |
            export NODE_ENV=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production
            ' }}
            npm install
            npm run build