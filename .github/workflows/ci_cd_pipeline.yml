name: Build and Deploy Nebulift

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: environment
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}
    env:
      AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}
      AZURE_WEBAPP_PACKAGE_PATH: './api'
    
    steps:
      - uses: actions/checkout@v4

      # Configuration PNPM et Node.js
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.x'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      # Configuration .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Build Backend
      - name: Build Backend
        run: |
          cd backend
          dotnet publish src/Nebulift.Api/Nebulift.Api.csproj -c Release -o ../api

      # Login to Azure via OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: 'federated'

      # Deploy Backend to Azure Web App
      - name: 'Deploy Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      # Build Frontend (nuxt generate)
      - name: Build Frontend
        run: |
          cd frontend
          pnpm install --no-frozen-lockfile
          pnpm run generate
      
      # Deploy Frontend to Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          app_location: "frontend/.output/public"
          skip_app_build: true
          action: "upload"
